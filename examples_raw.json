[
  {"input": "Number of users, commision or charge collected and amount transacted for each feature of digital channel for year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS,sum(COMMISSION) as COMMISSION,sum(TRANSACTED_AMOUNT) as TRANSACTED_AMOUNT FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE,COMMISSION,TRANSACTED_AMOUNT from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','E-COMMERCE') and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\nUNION ALL\nselect a.CHANNEL,CREDIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE,COMMISSION,TRANSACTED_AMOUNT from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL IN ('MOBISERVE','MTN PUSH','AIRTEL PUSH','E-COMMERCE') and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE"},
  {"input": "Number of digital users in the bank", "query": "\n--Can also get users of specific digital channel by specifying the channel\nSELECT count( DISTINCT CUSTOMER) as USERS FROM (\nselect DEBIT_CUSTOMER_NO as CUSTOMER from BOT_FUNDS_TRANSFER\nwhere CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','E-COMMERCE') and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\nUNION ALL\nselect CREDIT_CUSTOMER_NO as CUSTOMER from BOT_FUNDS_TRANSFER\nwhere CHANNEL IN ('MOBISERVE','MTN PUSH','AIRTEL PUSH','E-COMMERCE') and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a;"},
  {"input": "The digital channels in the bank", "query": "\nselect distinct CHANNEL from BOT_FUNDS_TRANSFER  where CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE');"},
  {"input": "Number of digital transactions", "query": "\nSELECT COUNT(*) as number_of_transaction\nFROM BOT_FUNDS_TRANSFER\nwhere CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE');"},
  {"input": "Number of transactions in each digital channel", "query": "\nSELECT CHANNEL, count(TRANSACTED_AMOUNT) as number_of_transactions\nFROM BOT_FUNDS_TRANSFER\nwhere CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE')\nGROUP BY CHANNEL;"},
  {"input": "Total value transacted in each digital channel", "query": "\nSELECT CHANNEL, sum(TRANSACTED_AMOUNT) as TRANSACTED_AMOUNT\nFROM BOT_FUNDS_TRANSFER\nwhere CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE')\nGROUP BY CHANNEL;"},
  {"input": "Number of digital channels used in the bank for the year 2024", "query": "\nselect distinct CHANNEL from BOT_FUNDS_TRANSFER  where CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE')\nand TRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31';"},
  {"input": "Number of users in each digital channel for the year 2024", "query": "\nSELECT CHANNEL, count(DISTINCT CUSTOMER) as users FROM (\nselect CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER from BOT_FUNDS_TRANSFER\nwhere CHANNEL IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','E-COMMERCE') and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\nUNION ALL\nselect CHANNEL, CREDIT_CUSTOMER_NO as CUSTOMER from BOT_FUNDS_TRANSFER\nwhere CHANNEL IN ('MOBISERVE','MTN PUSH','AIRTEL PUSH','E-COMMERCE') and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by CHANNEL;"},
  {"input": "Number of users per each feature in digital channels for the year 2024", "query": "\nWITH FilteredData AS (\nSELECT\na.CHANNEL,\nCASE\nWHEN a.CHANNEL IN ('IB', 'MOBILE APP', 'MOBISERVE', 'MTN PULL', 'E-COMMERCE') THEN DEBIT_CUSTOMER_NO\nELSE CREDIT_CUSTOMER_NO\nEND AS CUSTOMER,\nb.TRANSACTION_DESCRIPTION AS FEATURE\nFROM\nBOT_FUNDS_TRANSFER a\nLEFT JOIN\nV_T24_FT_TXN_TYPE_CHANNELS b\nON\na.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nWHERE\na.CHANNEL IN (\n'IB', 'MOBILE APP', 'MOBISERVE', 'MTN PULL', 'E-COMMERCE',\n'MTN PUSH', 'AIRTEL PUSH'\n)\nAND TRANSACTION_DATE BETWEEN '2024-01-01' AND '2024-12-31'\n)\nSELECT\nCHANNEL,\nFEATURE,\nCOUNT(DISTINCT CUSTOMER) AS USERS\nFROM\nFilteredData\nGROUP BY\nCHANNEL, FEATURE;"},
  {"input": "Total unique users per feature in IB Channel for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'IB' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Total unique users per feature in mobile app Channel for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'MOBILE APP' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Total unique users per feature in mobiserve or USSD Channel for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'MOBISERVE' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\nUNION ALL\nselect a.CHANNEL,CREDIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'MOBISERVE' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Number of users per feature in Bk Yacu or Agency banking Channel for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'BK YACU' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Number of users per feature in ecommerce Channel for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'E-COMMERCE' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\nUNION ALL\nselect a.CHANNEL,CREDIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'E-COMMERCE' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;\n"},
  {"input": "Unique users per MTN pull Channel for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL ='MTN PULL' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Unique users in MTN push for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,CREDIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL ='MTN PUSH' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Number of users in Airtel push for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,CREDIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL ='AIRTEL PUSH' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Unique users in Pos per feature for the year 2024", "query": "\nSELECT CHANNEL, FEATURE,count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'POS' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a group by a.CHANNEL,FEATURE;"},
  {"input": "Number of users in Pos for the year 2024", "query": "\nSELECT count(DISTINCT CUSTOMER) as USERS FROM (\nselect a.CHANNEL,DEBIT_CUSTOMER_NO as CUSTOMER,b.TRANSACTION_DESCRIPTION AS FEATURE from BOT_FUNDS_TRANSFER a\nleft join V_T24_FT_TXN_TYPE_CHANNELS b on a.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nwhere a.CHANNEL = 'POS' and\nTRANSACTION_DATE >= '2024-01-01' and TRANSACTION_DATE <= '2024-12-31'\n)a;"},
  {"input": "Give list of non digital channels in the bank", "query": "\nselect distinct CHANNEL from BOT_FUNDS_TRANSFER  where CHANNEL NOT IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE');"},
  {"input": "Number of non digital transactions", "query": "\nSELECT COUNT(*) as number_of_transaction\nFROM BOT_FUNDS_TRANSFER\nwhere CHANNEL NOT IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE');"},
  {"input": "Total commision or charge per each non digital channel", "query": "\nSELECT CHANNEL, sum(COMMISSION) as COMMISSION\nFROM BOT_FUNDS_TRANSFER\nwhere CHANNEL NOT IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE')\nGROUP BY CHANNEL;"},
  {"input": "Number of transactions in each non digital channel", "query": "\nSELECT CHANNEL, count(TRANSACTED_AMOUNT) as number_of_transactions\nFROM BOT_FUNDS_TRANSFER\nwhere CHANNEL NOT IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE')\nGROUP BY CHANNEL;"},
  {"input": "Total value transacted in each non digital channel", "query": "\nSELECT CHANNEL, sum(TRANSACTED_AMOUNT) as TRANSACTED_AMOUNT\nFROM BOT_FUNDS_TRANSFER\nwhere CHANNEL NOT IN ('IB','MOBILE APP','MOBISERVE','MTN PULL','MTN PUSH','AIRTEL PUSH','E-COMMERCE')\nGROUP BY CHANNEL;"},
  {"input": "Digital channel status for the new customers for year 2025", "query": "\nSELECT\nSEGMENT,\nCASE\nWHEN CHANNEL IS NOT NULL THEN 'Digital users'\nELSE 'No digital users'\nEND AS STATUS,\nCOUNT(CUSTOMER_NO) AS USERS\nFROM\nBOT_CUSTOMER a\nLEFT JOIN (\nSELECT\na.CHANNEL,\nDEBIT_CUSTOMER_NO AS CUSTOMER,\nb.TRANSACTION_DESCRIPTION AS FEATURE,\nCOMMISSION,\nTRANSACTED_AMOUNT\nFROM\nBOT_FUNDS_TRANSFER a\nLEFT JOIN\nV_T24_FT_TXN_TYPE_CHANNELS b\nON\na.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nWHERE\na.CHANNEL IN ('IB', 'MOBILE APP', 'MOBISERVE', 'MTN PULL', 'E-COMMERCE')\n\nUNION ALL\n\nSELECT\na.CHANNEL,\nCREDIT_CUSTOMER_NO AS CUSTOMER,\nb.TRANSACTION_DESCRIPTION AS FEATURE,\nCOMMISSION,\nTRANSACTED_AMOUNT\nFROM\nBOT_FUNDS_TRANSFER a\nLEFT JOIN\nV_T24_FT_TXN_TYPE_CHANNELS b\nON\na.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nWHERE\na.CHANNEL IN ('MOBISERVE', 'MTN PUSH', 'AIRTEL PUSH', 'E-COMMERCE')\n) b\nON\na.CUSTOMER_NO = b.CUSTOMER\nWHERE\nJOINING_DATE >= '2025-01-01'\nGROUP BY\nSEGMENT,\nCASE\nWHEN CHANNEL IS NOT NULL THEN 'Digital users'\nELSE 'No digital users'\nEND;\n"},
  {"input": "Customers joined 2025 and digital channels used", "query": "SELECT\nSEGMENT,\nCOALESCE(CHANNEL, 'No channel') AS CHANNEL,\nCOUNT(CUSTOMER_NO) AS USERS\nFROM\nBOT_CUSTOMER a\nLEFT JOIN (\nSELECT\na.CHANNEL,\nDEBIT_CUSTOMER_NO AS CUSTOMER,\nb.TRANSACTION_DESCRIPTION AS FEATURE,\nCOMMISSION,\nTRANSACTED_AMOUNT\nFROM\nBOT_FUNDS_TRANSFER a\nLEFT JOIN\nV_T24_FT_TXN_TYPE_CHANNELS b\nON\na.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nWHERE\na.CHANNEL IN ('IB', 'MOBILE APP', 'MOBISERVE', 'MTN PULL', 'E-COMMERCE')\n\nUNION ALL\n\nSELECT\na.CHANNEL,\nCREDIT_CUSTOMER_NO AS CUSTOMER,\nb.TRANSACTION_DESCRIPTION AS FEATURE,\nCOMMISSION,\nTRANSACTED_AMOUNT\nFROM\nBOT_FUNDS_TRANSFER a\nLEFT JOIN\nV_T24_FT_TXN_TYPE_CHANNELS b\nON\na.TRANSACTION_TYPE = b.TRANSACTION_TYPE\nWHERE\na.CHANNEL IN ('MOBISERVE', 'MTN PUSH', 'AIRTEL PUSH', 'E-COMMERCE')\n) b\nON\na.CUSTOMER_NO = b.CUSTOMER\nWHERE\nJOINING_DATE >= '2025-01-01'\nGROUP BY\nSEGMENT, COALESCE(CHANNEL, 'No channel');\n"},
  {"input": "How many customers do we have?", "query": "-- A customer is defined as someone who has an account with a category starting with '1' (e.g., Current) or '6' (e.g., Savings),\n-- and should not have an account in category '1080' (e.g., Suspended Accounts).\nSELECT COUNT(DISTINCT c.CUSTOMER_NO) as CUSTOMERS\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6');\n"},
  {"input": "How many accounts transacted yesterday?", "query": "SELECT COUNT(DISTINCT ACCOUNT_NUMBER) AS account_count\nFROM ChatbotAccounts\nWHERE LAST_TRANS_DATE = CAST(GETDATE() - 1 AS DATE);"},
  {"input": "How many active account do we have?", "query": "SELECT COUNT(DISTINCT ACCOUNT_NUMBER) AS active_accounts\nFROM ChatbotAccounts\nWHERE\n(CATEGORY LIKE '1%' AND CATEGORY NOT IN ('1080', '1031') AND LAST_TRANS_DATE >= DATEADD(DAY, -90, GETDATE())) -- Active for current accounts\nOR\n(CATEGORY LIKE '6%' AND LAST_TRANS_DATE >= DATEADD(DAY, -360, GETDATE())) -- Active for savings accounts\nAND CATEGORY NOT IN ('1080', '1031') --Unsecured Financing Accounts\n"},
  {"input": "How many Inactive accounts?", "query": "SELECT COUNT(DISTINCT ACCOUNT_NUMBER)  AS inactive_accounts\nFROM ChatbotAccounts\nWHERE\n(CATEGORY LIKE '1%' AND  CATEGORY NOT IN ('1080', '1031') AND LAST_TRANS_DATE < DATEADD(DAY, -90, GETDATE())  -- Inactive for current accounts\nAND LAST_TRANS_DATE >= DATEADD(DAY, -180, GETDATE()))  -- At least one transaction in last 180 days\nOR\n(CATEGORY LIKE '6%' AND  LAST_TRANS_DATE < DATEADD(DAY, -360, GETDATE()));  -- Savings accounts without transactions in last 360 days\n"},
  {"input": "How many customers are in the retail segment?", "query": "-- Segment ('RETAIL','AGRICULTURE','CORPORATE','INSTITUTIONAL BANKING','SME')\nSELECT COUNT(DISTINCT c.CUSTOMER_NO)\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE c.SEGMENT  = 'RETAIL'\nAND a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6');\n"},
  {"input": "How many customers are in the SME segment?", "query": "-- Segment 'SME' corresponds to SME (Small and Medium Enterprises) customers.\nSELECT COUNT(DISTINCT c.CUSTOMER_NO)\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE c.SEGMENT = 'SME'\nAND a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6');"},
  {"input": "How many Loan accounts?", "query": "-- Categories starting with '3' correspond to loan accounts.\nSELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE CATEGORY LIKE '3%';"},
  {"input": "How many Current accounts?", "query": "-- Categories starting with '1' correspond to current accounts.\nSELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE (CATEGORY LIKE '1%' AND CATEGORY NOT IN ('1080', '1031'));"},
  {"input": "How many Savings accounts?", "query": "-- Categories starting with '6' correspond to savings accounts.\nSELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE CATEGORY LIKE '6%'\n;"},
  {"input": "Give me account activity status", "query": "\nWITH Filtered_Accounts AS (\nSELECT\nACCOUNT_NUMBER,  -- Ensure this column represents your account identifier\nCATEGORY,\nLAST_TRANS_DATE,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()))) THEN 'ACTIVE'\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())) THEN 'INACTIVE'\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE())) THEN 'DORMANT'\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE())) THEN 'UNCLAIMED'\nELSE NULL\nEND AS Status,\nCASE\nWHEN SUBSTRING(CATEGORY, 1, 1) = '1' THEN 'Current Account'\nWHEN SUBSTRING(CATEGORY, 1, 1) = '3' THEN 'Loan Account'\nWHEN SUBSTRING(CATEGORY, 1, 1) = '6' THEN 'Savings Account'\nELSE 'Other Accounts'\nEND AS Account_Type\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n)\n\nSELECT\nAccount_Type,\nCOUNT(DISTINCT ACCOUNT_NUMBER) AS Total_Accounts,\nSUM(CASE WHEN Status = 'ACTIVE' THEN 1 ELSE 0 END) AS Active_Accounts,\nSUM(CASE WHEN Status = 'INACTIVE' THEN 1 ELSE 0 END) AS Inactive_Accounts,\nSUM(CASE WHEN Status = 'DORMANT' THEN 1 ELSE 0 END) AS Dormant_Accounts,\nSUM(CASE WHEN Status = 'UNCLAIMED' THEN 1 ELSE 0 END) AS Unclaimed_Accounts,\nCAST(\n(SUM(CASE WHEN Status IN ('DORMANT', 'UNCLAIMED') THEN 1 ELSE 0 END) * 1.0) /\nNULLIF(COUNT(DISTINCT ACCOUNT_NUMBER), 0) * 100 AS DECIMAL(10, 2)\n) AS Churn_Rate\nFROM Filtered_Accounts\nGROUP BY Account_Type\n"},
  {"input": "Give me a list of 10 corporate customers names?", "query": "-- Corporate customers are those in segment '4'.\nSELECT TOP 10 c.SHORT_NAME\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE c.SEGMENT = 'CORPORATE'\nAND a.CATEGORY <> '1080'\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')\n;"},
  {"input": "Give me a list of all BK STAFF customers?", "query": "-- TARGET ('BK STAFF','CEOs','DIASPORA','POLITICAL EXPOSED PERSONS','STUDENTS',etc).\nSELECT *\nFROM BOT_CUSTOMER\nWHERE TARGET = 'BK STAFF';\n"},
  {"input": "How many student like customers do we have?", "query": "\nSELECT COUNT(DISTINCT CUSTOMER_NO)\nFROM BOT_CUSTOMER\nWHERE TARGET like '%STUDENT%';"},
  {"input": "Give a list of all targets to identify different customers", "query": "SELECT DISTINCT TARGET FROM BOT_CUSTOMER;"},
  {"input": "How many inactive customers do we have?", "query": "WITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360,GETDATE()))) THEN 1\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE())\nOR CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360,GETDATE())THEN 2\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE()) THEN 3\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE()) THEN 5\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n)\n\nSELECT\nCOUNT(DISTINCT c.CUSTOMER_NO) AS TOTAL_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 1 THEN c.CUSTOMER_NO END) AS ACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 2 THEN c.CUSTOMER_NO END) AS INACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 THEN c.CUSTOMER_NO END) AS DORMANT_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) AS UNCLAIMED_CUSTOMERS,\nCAST(\n(COUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) *1.0) /\n(COUNT(DISTINCT c.CUSTOMER_NO)) * 100 AS DECIMAL(10,2)) AS CHURN_RATE\n\nFROM BOT_CUSTOMER c\nJOIN Customer_Status cs ON c.CUSTOMER_NO = cs.CUSTOMER_NUMBER;\n"},
  {"input": "What is our churn rate number?", "query": "\nWITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360,GETDATE()))) THEN 1\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE())\nOR CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360,GETDATE())THEN 2\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE()) THEN 3\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE()) THEN 5\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n)\n\nSELECT\nCOUNT(DISTINCT c.CUSTOMER_NO) AS TOTAL_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) AS CHRN_CUSTOMERS,\nCAST(\n(COUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) *1.0) /\n(COUNT(DISTINCT c.CUSTOMER_NO)) * 100 AS DECIMAL(10,2)) AS CHURN_RATE\n\nFROM BOT_CUSTOMER c\nJOIN Customer_Status cs ON c.CUSTOMER_NO = cs.CUSTOMER_NUMBER;\n"},
  {"input": "What is the current churn rate by segment", "query": "\nWITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360,GETDATE()))) THEN 1\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE())\nOR CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360,GETDATE())THEN 2\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE()) THEN 3\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE()) THEN 5\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n)\n\nSELECT\nc.SEGMENT,\nCOUNT(DISTINCT c.CUSTOMER_NO) AS TOTAL_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 1 THEN c.CUSTOMER_NO END) AS ACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 2 THEN c.CUSTOMER_NO END) AS INACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 THEN c.CUSTOMER_NO END) AS DORMANT_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) AS UNCLAIMED_CUSTOMERS,\nCAST(\n(COUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) *1.0) /\n(COUNT(DISTINCT c.CUSTOMER_NO)) * 100 AS DECIMAL(10,2)) AS CHURN_RATE\n\nFROM BOT_CUSTOMER c\nJOIN Customer_Status cs ON c.CUSTOMER_NO = cs.CUSTOMER_NUMBER\nGROUP BY c.SEGMENT;\n"},
  {"input": "Return the number of customers who joined the bank this year", "query": "\nSELECT COUNT(DISTINCT c.CUSTOMER_NO)\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')\nAND YEAR(c.JOINING_DATE) = YEAR(GETDATE());\n"},
  {"input": "Tell me about individual and non individual customer", "query": "\nSELECT BK_TYPE_OF_CUST,COUNT(DISTINCT c.CUSTOMER_NO) AS NUMBER_CUSTOMERS\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')\nGROUP BY BK_TYPE_OF_CUST;\n"},
  {"input": "Return the customers who transacted and those who never transacted", "query": "\nWITH CustomerAccountStatus AS (\nSELECT\nc.CUSTOMER_NO,\nCASE\nWHEN a.LAST_TRANS_DATE = a.OPENING_DATE THEN 0  -- Never Transacted\nELSE 1  -- Has Transacted\nEND AS Transaction_Status\nFROM\nBOT_CUSTOMER c\nJOIN\nChatbotAccounts a ON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE\na.CATEGORY NOT IN ('1080', '1031')  -- Exclude specific categories\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')  -- Include valid categories\n),\n\nMaxTransactionStatus AS (\nSELECT\nCUSTOMER_NO,\nMAX(Transaction_Status) AS Max_Status\nFROM\nCustomerAccountStatus\nGROUP BY\nCUSTOMER_NO\n)\n\nSELECT\nSUM(CASE WHEN Max_Status = 0 THEN 1 ELSE 0 END) AS Customers_Never_Transacted,\nSUM(CASE WHEN Max_Status = 1 THEN 1 ELSE 0 END) AS Customers_Has_Transacted\nFROM\nMaxTransactionStatus;\n"},
  {"input": "How many inactive customers will become dormant customers in the next 30 days if they don't transact", "query": "\nWITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()))) THEN 1  -- Active\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())) THEN 2  -- Inactive\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE())) THEN 3  -- Dormant\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE())) THEN 4  -- Unclaimed\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(CATEGORY, 1, 1) <> '3'\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(Status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n),\n\nDormant_Customers AS (\nSELECT\ncs.CUSTOMER_NUMBER\nFROM Customer_Status cs\nJOIN ChatbotAccounts a ON cs.CUSTOMER_NUMBER = a.CUSTOMER_NUMBER\nWHERE\ncs.Status_Rank = 2  -- Inactive customers\nAND a.LAST_TRANS_DATE <= DATEADD(DAY, -330, GETDATE()) -- Inactive for at least 330 days\nAND a.LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()) -- Will transition to Dormant soon\n)\n\nSELECT\nCOUNT(DISTINCT arc.CUSTOMER_NUMBER) AS At_Risk_To_Dormant_Count\nFROM Dormant_Customers arc;\n"}
]