{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many customers do we have?"}, {"role": "assistant", "content": "-- A customer is defined as someone who has an account with a category starting with '1' (e.g., Current) or '6' (e.g., Savings),\n-- and should not have an account in category '1080' (e.g., Suspended Accounts).\nSELECT COUNT(DISTINCT c.CUSTOMER_NO)\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6');\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many accounts transacted yesterday?"}, {"role": "assistant", "content": "SELECT COUNT(DISTINCT ACCOUNT_NUMBER) AS account_count\nFROM ChatbotAccounts\nWHERE LAST_TRANS_DATE = CAST(GETDATE() - 1 AS DATE);"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many active account do we have?"}, {"role": "assistant", "content": "SELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE\n(CATEGORY LIKE '1%' AND CATEGORY NOT IN ('1080', '1031') AND LAST_TRANS_DATE >= DATEADD(DAY, -90, GETDATE())) -- Active for current accounts\nOR\n(CATEGORY LIKE '6%' AND LAST_TRANS_DATE >= DATEADD(DAY, -360, GETDATE())) -- Active for savings accounts\nAND CATEGORY NOT IN ('1080', '1031') --Unsecured Financing Accounts\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many Inactive accounts?"}, {"role": "assistant", "content": "SELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE\n(CATEGORY LIKE '1%' AND  CATEGORY NOT IN ('1080', '1031') AND LAST_TRANS_DATE < DATEADD(DAY, -90, GETDATE())  -- Inactive for current accounts\nAND LAST_TRANS_DATE >= DATEADD(DAY, -180, GETDATE()))  -- At least one transaction in last 180 days\nOR\n(CATEGORY LIKE '6%' AND  LAST_TRANS_DATE < DATEADD(DAY, -360, GETDATE()));  -- Savings accounts without transactions in last 360 days\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many customers are in the retail segment?"}, {"role": "assistant", "content": "-- Segment ('RETAIL','AGRICULTURE','CORPORATE','INSTITUTIONAL BANKING','SME')\nSELECT COUNT(DISTINCT c.CUSTOMER_NO)\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE c.SEGMENT like = 'RETAIL'\nAND a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6');\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many customers are in the SME segment?"}, {"role": "assistant", "content": "-- Segment '2' corresponds to SME (Small and Medium Enterprises) customers.\nSELECT COUNT(DISTINCT c.CUSTOMER_NO)\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE c.SEGMENT = 'SME'\nAND a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6');"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many Loan accounts?"}, {"role": "assistant", "content": "-- Categories starting with '3' correspond to loan accounts.\nSELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE CATEGORY LIKE '3%';"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many Current accounts?"}, {"role": "assistant", "content": "-- Categories starting with '1' correspond to current accounts.\nSELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE (CATEGORY LIKE '1%' AND CATEGORY NOT IN ('1080', '1031'));"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many Savings accounts?"}, {"role": "assistant", "content": "-- Categories starting with '6' correspond to savings accounts.\nSELECT COUNT(DISTINCT ACCOUNT_NUMBER)\nFROM ChatbotAccounts\nWHERE CATEGORY LIKE '6%'\n;"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "Give me account activity status"}, {"role": "assistant", "content": "\nWITH Filtered_Accounts AS (\nSELECT\nACCOUNT_NUMBER,  -- Ensure this column represents your account identifier\nCATEGORY,\nLAST_TRANS_DATE,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -90, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()))) THEN 'ACTIVE'\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -90, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())) THEN 'INACTIVE'\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE())) THEN 'DORMANT'\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE())) THEN 'DOMCLOSED'\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE())) THEN 'UNCLAIMED'\nELSE NULL\nEND AS Status,\nCASE\nWHEN SUBSTRING(CATEGORY, 1, 1) = '1' THEN 'Current Account'\nWHEN SUBSTRING(CATEGORY, 1, 1) = '3' THEN 'Loan Account'\nWHEN SUBSTRING(CATEGORY, 1, 1) = '6' THEN 'Savings Account'\nELSE 'Other Accounts'\nEND AS Account_Type\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n)\n\nSELECT\nAccount_Type,\nCOUNT(DISTINCT ACCOUNT_NUMBER) AS Total_Accounts,\nSUM(CASE WHEN Status = 'ACTIVE' THEN 1 ELSE 0 END) AS Active_Accounts,\nSUM(CASE WHEN Status = 'INACTIVE' THEN 1 ELSE 0 END) AS Inactive_Accounts,\nSUM(CASE WHEN Status = 'DORMANT' THEN 1 ELSE 0 END) AS Dormant_Accounts,\nSUM(CASE WHEN Status = 'DOMCLOSED' THEN 1 ELSE 0 END) AS Dom_Closed_Accounts,\nSUM(CASE WHEN Status = 'UNCLAIMED' THEN 1 ELSE 0 END) AS Unclaimed_Accounts,\nCAST(\n(SUM(CASE WHEN Status IN ('DOMCLOSED', 'UNCLAIMED') THEN 1 ELSE 0 END) * 1.0) /\nNULLIF(COUNT(DISTINCT ACCOUNT_NUMBER), 0) * 100 AS DECIMAL(10, 2)\n) AS Churn_Rate\nFROM Filtered_Accounts\nGROUP BY Account_Type\n\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "Give me a list of 10 corporate customers names?"}, {"role": "assistant", "content": "-- Corporate customers are those in segment '4'.\nSELECT TOP 10 c.SHORT_NAME\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE c.SEGMENT = '4'\nAND a.CATEGORY <> '1080'\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')\n;"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "Give me a list of all BK STAFF customers?"}, {"role": "assistant", "content": "-- TARGET ('BK STAFF','CEOs','DIASPORA','POLITICAL EXPOSED PERSONS','STUDENTS',etc).\nSELECT *\nFROM BOT_CUSTOMER\nWHERE TARGET = 'BK STAFF'\n;"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many student like customers do we have?"}, {"role": "assistant", "content": "\nSELECT COUNT(DISTINCT CUSTOMER_NO)\nFROM BOT_CUSTOMER\nWHERE TARGET like 'STUDENT';"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "Give a list of all targets to identify different customers"}, {"role": "assistant", "content": "SELECT DISTINCT TARGET FROM BOT_CUSTOMER;"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many inactive customers do we have?"}, {"role": "assistant", "content": "WITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -90, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360,GETDATE()))) THEN 1\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -90, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE())\nOR CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360,GETDATE())THEN 2\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()) THEN 3\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE()) THEN 4\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE()) THEN 5\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n)\n\n\nSELECT\nCOUNT(DISTINCT c.CUSTOMER_NO) AS TOTAL_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 1 THEN c.CUSTOMER_NO END) AS ACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 2 THEN c.CUSTOMER_NO END) AS INACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 THEN c.CUSTOMER_NO END) AS DORMANT_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 THEN c.CUSTOMER_NO END) AS DOM_CLOSED_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) AS UNCLAIMED_CUSTOMERS,\nCAST(\n(COUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) *1.0) /\n(COUNT(DISTINCT c.CUSTOMER_NO)) * 100 AS DECIMAL(10,2)) AS CHURN_RATE\n\nFROM BOT_CUSTOMER c\nJOIN Customer_Status cs ON c.CUSTOMER_NO = cs.CUSTOMER_NUMBER;\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many dom closed customers do we have?"}, {"role": "assistant", "content": "\nWITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -90, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360,GETDATE()))) THEN 1\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -90, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE())\nOR CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360,GETDATE())THEN 2\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()) THEN 3\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE()) THEN 4\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE()) THEN 5\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n)\n\n\nSELECT\nCOUNT(DISTINCT c.CUSTOMER_NO) AS TOTAL_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 1 THEN c.CUSTOMER_NO END) AS ACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 2 THEN c.CUSTOMER_NO END) AS INACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 THEN c.CUSTOMER_NO END) AS DORMANT_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 THEN c.CUSTOMER_NO END) AS DOM_CLOSED_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) AS UNCLAIMED_CUSTOMERS,\nCAST(\n(COUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) *1.0) /\n(COUNT(DISTINCT c.CUSTOMER_NO)) * 100 AS DECIMAL(10,2)) AS CHURN_RATE\n\nFROM BOT_CUSTOMER c\nJOIN Customer_Status cs ON c.CUSTOMER_NO = cs.CUSTOMER_NUMBER;\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "What is our churn rate number?"}, {"role": "assistant", "content": "\nWITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -90, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360,GETDATE()))) THEN 1\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -90, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE())\nOR CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360,GETDATE())THEN 2\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()) THEN 3\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE()) THEN 4\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE()) THEN 5\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n)\n\nSELECT\nCOUNT(DISTINCT c.CUSTOMER_NO) AS TOTAL_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) AS CHRN_CUSTOMERS,\nCAST(\n(COUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) *1.0) /\n(COUNT(DISTINCT c.CUSTOMER_NO)) * 100 AS DECIMAL(10,2)) AS CHURN_RATE\n\nFROM BOT_CUSTOMER c\nJOIN Customer_Status cs ON c.CUSTOMER_NO = cs.CUSTOMER_NUMBER;\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "What is the current churn rate by segment"}, {"role": "assistant", "content": "\nWITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -90, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360,GETDATE()))) THEN 1\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -90, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE())\nOR CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360,GETDATE())THEN 2\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()) THEN 3\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE()) THEN 4\nWHEN CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE()) THEN 5\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n)\n\nSELECT\nc.SEGMENT,\nCOUNT(DISTINCT c.CUSTOMER_NO) AS TOTAL_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 1 THEN c.CUSTOMER_NO END) AS ACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 2 THEN c.CUSTOMER_NO END) AS INACTIVE_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 3 THEN c.CUSTOMER_NO END) AS DORMANT_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 THEN c.CUSTOMER_NO END) AS DOM_CLOSED_CUSTOMERS,\nCOUNT(DISTINCT CASE WHEN cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) AS UNCLAIMED_CUSTOMERS,\nCAST(\n(COUNT(DISTINCT CASE WHEN cs.Status_Rank = 4 OR cs.Status_Rank = 5 THEN c.CUSTOMER_NO END) *1.0) /\n(COUNT(DISTINCT c.CUSTOMER_NO)) * 100 AS DECIMAL(10,2)) AS CHURN_RATE\n\nFROM BOT_CUSTOMER c\nJOIN Customer_Status cs ON c.CUSTOMER_NO = cs.CUSTOMER_NUMBER\nGROUP BY c.SEGMENT;\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "Return the number of customers who joined the bank this year"}, {"role": "assistant", "content": "\nSELECT COUNT(DISTINCT c.CUSTOMER_NO)\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')\nAND YEAR(c.JOINING_DATE) = YEAR(GETDATE());\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "Tell me about individual and non individual customer"}, {"role": "assistant", "content": "\nSELECT BK_TYPE_OF_CUST,COUNT(DISTINCT c.CUSTOMER_NO) AS NUMBER_CUSTOMERS\nFROM BOT_CUSTOMER c\nJOIN ChatbotAccounts a\nON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE a.CATEGORY NOT IN ('1080', '1031')\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')\nGROUP BY BK_TYPE_OF_CUST;\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "Return the customers who transacted and those who never transacted"}, {"role": "assistant", "content": "\nWITH CustomerAccountStatus AS (\nSELECT\nc.CUSTOMER_NO,\nCASE\nWHEN a.LAST_TRANS_DATE = a.OPENING_DATE THEN 0  -- Never Transacted\nELSE 1  -- Has Transacted\nEND AS Transaction_Status\nFROM\nBOT_CUSTOMER c\nJOIN\nChatbotAccounts a ON c.CUSTOMER_NO = a.CUSTOMER_NUMBER\nWHERE\na.CATEGORY NOT IN ('1080', '1031')  -- Exclude specific categories\nAND SUBSTRING(a.CATEGORY, 1, 1) IN ('1', '6')  -- Include valid categories\n),\n\nMaxTransactionStatus AS (\nSELECT\nCUSTOMER_NO,\nMAX(Transaction_Status) AS Max_Status\nFROM\nCustomerAccountStatus\nGROUP BY\nCUSTOMER_NO\n)\n\nSELECT\nSUM(CASE WHEN Max_Status = 0 THEN 1 ELSE 0 END) AS Customers_Never_Transacted,\nSUM(CASE WHEN Max_Status = 1 THEN 1 ELSE 0 END) AS Customers_Has_Transacted\nFROM\nMaxTransactionStatus;\n"}]}
{"messages": [{"role": "system", "content": "You are a MSSQL expert. Given an input question, create a syntactically correct SQL (MSSQL) query to run unless otherwise specified. Here is the relevant table info: {table_info_holder}. Definitions: {definitions_string}. IMPORTANT: When generating SQL queries, make sure to apply the definitions provided above."}, {"role": "user", "content": "How many dormant customers will become dom closed customers in the 30 days if they don't transact"}, {"role": "assistant", "content": "\nWITH Filtered_Accounts AS (\nSELECT\nCUSTOMER_NUMBER,\nCASE\nWHEN ((CATEGORY LIKE '1%' AND LAST_TRANS_DATE > DATEADD(DAY, -90, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE()))) THEN 1  -- Active\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -90, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -180, GETDATE()))\nOR (CATEGORY LIKE '6%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())) THEN 2  -- Inactive\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -180, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -360, GETDATE())) THEN 3  -- Dormant\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE <= DATEADD(DAY, -360, GETDATE())\nAND LAST_TRANS_DATE > DATEADD(DAY, -1800, GETDATE())) THEN 4  -- Dom Closed\nWHEN (CATEGORY LIKE '1%' AND LAST_TRANS_DATE < DATEADD(DAY, -1800, GETDATE())) THEN 5  -- Unclaimed\nELSE NULL\nEND AS Status\nFROM ChatbotAccounts\nWHERE CATEGORY NOT IN ('1080', '1031')\n),\n\nCustomer_Status AS (\nSELECT\nCUSTOMER_NUMBER,\nMIN(Status) AS Status_Rank\nFROM Filtered_Accounts\nWHERE Status IS NOT NULL\nGROUP BY CUSTOMER_NUMBER\n),\n\nDormant_Customers AS (\nSELECT\ncs.CUSTOMER_NUMBER\nFROM Customer_Status cs\nWHERE cs.Status_Rank = 3  -- Identifying dormant customers\n)\n\nSELECT\ncount(DISTINCT dc.CUSTOMER_NUMBER)\nFROM\nDormant_Customers dc\nJOIN ChatbotAccounts a ON dc.CUSTOMER_NUMBER = a.CUSTOMER_NUMBER\nWHERE\na.LAST_TRANS_DATE < DATEADD(DAY, -330, GETDATE());\n\n"}]}
